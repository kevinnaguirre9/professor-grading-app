version: "3.9"
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: professor-grading-app
    working_dir: /app
    restart: unless-stopped
    tty: true
    volumes:
      - ./:/app
    ports:
      - "${APP_PORT:-8080}:8080"
    networks:
      - pga-network

  mongo:
    image: "mongo:6.0"
    container_name: professor-grading-app-mongodb
    command: mongod --auth
    restart: unless-stopped
    logging:
      driver: none
    ports:
      - "${DB_PORT_INTERNAL_LOCALHOST_MONGODB:-27017}:${DB_PORT_MONGODB:-27017}"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DB_USERNAME_MONGODB}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD_MONGODB}
    volumes:
      - 'pga-mongo-data:/data/db'
      - 'pga-mongo-log:/var/log/mongodb/'
    networks:
      - pga-network

  mongo-express:
    image: mongo-express
    container_name: professor-grading-app-mongo-express
    restart: unless-stopped
    depends_on:
      - mongo
    ports:
      - '${FORWARD_MONGODB_EXPRESS_PORT:-8081}:8081'
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${DB_USERNAME_MONGODB}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${DB_PASSWORD_MONGODB}
      - ME_CONFIG_BASICAUTH_USERNAME=${DB_USERNAME_MONGODB}
      - ME_CONFIG_BASICAUTH_PASSWORD=${DB_PASSWORD_MONGODB}
    networks:
      - pga-network

volumes:
  pga-mongo-data:
    driver: local
  pga-mongo-log:
    driver: local

networks:
  pga-network:
    external:
      name: pga-shared-network

#Create external network with <docker network create pga-shared-network> command
